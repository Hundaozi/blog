<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>魂道子</title>
  <subtitle>我欲修仙</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://leeyonghua.com/"/>
  <updated>2017-11-01T12:36:42.343Z</updated>
  <id>http://leeyonghua.com/</id>
  
  <author>
    <name>Leeyonghua</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>单链表的操作</title>
    <link href="http://leeyonghua.com/2017/11/01/%E5%8D%95%E9%93%BE%E8%A1%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://leeyonghua.com/2017/11/01/单链表的基本操作/</id>
    <published>2017-10-31T16:00:00.000Z</published>
    <updated>2017-11-01T12:36:42.343Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></div><div class="line"><span class="class">&#123;</span></div><div class="line">	<span class="keyword">int</span> data;</div><div class="line">	node *next;</div><div class="line">&#125;*<span class="built_in">list</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">creat</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	<span class="built_in">list</span> = <span class="keyword">new</span> node;</div><div class="line">	<span class="built_in">list</span>-&gt;next = <span class="literal">NULL</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">tailinsert</span><span class="params">()</span>               <span class="comment">//尾插入</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	<span class="keyword">int</span> x;</div><div class="line">	node *p, *q;</div><div class="line">	q = <span class="built_in">list</span>;</div><div class="line">	<span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; x&amp;&amp;x != <span class="number">-1111</span>)</div><div class="line">	&#123;</div><div class="line">		p = <span class="keyword">new</span> node;</div><div class="line">		p-&gt;data = x;</div><div class="line">		p-&gt;next = <span class="literal">NULL</span>;</div><div class="line">		q-&gt;next = p;</div><div class="line">		q = p;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	node *p = <span class="built_in">list</span>-&gt;next;</div><div class="line">	<span class="keyword">while</span> (p)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; p-&gt;data &lt;&lt; <span class="string">" "</span>;</div><div class="line">		p = p-&gt;next;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">length</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	<span class="keyword">int</span> a = <span class="number">0</span>;</div><div class="line">	node *p = <span class="built_in">list</span>-&gt;next;</div><div class="line">	<span class="keyword">while</span> (p)</div><div class="line">	&#123;</div><div class="line">		++a;</div><div class="line">		p = p-&gt;next;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> a;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> elem)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	<span class="keyword">int</span> index = <span class="number">0</span>;</div><div class="line">	node *p = <span class="built_in">list</span>-&gt;next;</div><div class="line">	<span class="keyword">while</span> (p)</div><div class="line">	&#123;</div><div class="line">		++index;</div><div class="line">		<span class="keyword">if</span> (p-&gt;data == elem)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"请选择：\n\t1.读取\n\n2.修改"</span> &lt;&lt; <span class="built_in">endl</span>&lt;&lt;<span class="string">'\t'</span>;</div><div class="line">			<span class="keyword">int</span> n;</div><div class="line">			<span class="built_in">cin</span> &gt;&gt; n;</div><div class="line">			<span class="keyword">if</span> (n == <span class="number">1</span>)</div><div class="line">				<span class="built_in">cout</span> &lt;&lt; <span class="string">"第"</span> &lt;&lt; index &lt;&lt; <span class="string">"个数的值为"</span> &lt;&lt; p-&gt;data &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">2</span>)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">int</span> x;</div><div class="line">				<span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入改变后的值:"</span>;</div><div class="line">				<span class="built_in">cin</span> &gt;&gt; x;</div><div class="line">				p-&gt;data = x;</div><div class="line">				<span class="built_in">cout</span> &lt;&lt; <span class="string">"第"</span> &lt;&lt; index &lt;&lt; <span class="string">"个数的值为"</span> &lt;&lt; p-&gt;data &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		p = p-&gt;next;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> elem)</span>        <span class="comment">//插入操作,将elem插入i</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	node *p, *q;</div><div class="line">	p = <span class="built_in">list</span>;</div><div class="line">	<span class="keyword">int</span> index = <span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span> (p&amp;&amp;index &lt; i)</div><div class="line">	&#123;</div><div class="line">		p = p-&gt;next;</div><div class="line">		index++;</div><div class="line">		<span class="keyword">if</span> (!p || index &gt; i)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"i越界"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">			<span class="built_in">exit</span>(<span class="number">1</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	q = <span class="keyword">new</span> node;</div><div class="line">	q-&gt;data = elem;</div><div class="line">	q-&gt;next = p-&gt;next;</div><div class="line">	p-&gt;next = q;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">(<span class="keyword">int</span> i)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	node *p, *q;</div><div class="line">	p = <span class="built_in">list</span>;</div><div class="line">	<span class="keyword">int</span> index = <span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span> (p&amp;&amp;index &lt; i)</div><div class="line">	&#123;</div><div class="line">		p = p-&gt;next;</div><div class="line">		index++;</div><div class="line">		<span class="keyword">if</span> (!p || index &gt; i)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"i越界"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">			<span class="built_in">exit</span>(<span class="number">1</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	q = p-&gt;next;</div><div class="line">	p-&gt;next = q-&gt;next;</div><div class="line">	<span class="keyword">delete</span> q;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	creat();</div><div class="line">	tailinsert();</div><div class="line">	output();</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"长度为"</span>&lt;&lt;length() &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	change(<span class="number">3</span>);</div><div class="line">	output();</div><div class="line">	insert(<span class="number">5</span>, <span class="number">6</span>);</div><div class="line">	output();</div><div class="line">	Delete(<span class="number">1</span>);</div><div class="line">	output();</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;
    
    </summary>
    
      <category term="学习之路" scheme="http://leeyonghua.com/categories/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="数据结构" scheme="http://leeyonghua.com/categories/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="http://leeyonghua.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="第二章" scheme="http://leeyonghua.com/tags/%E7%AC%AC%E4%BA%8C%E7%AB%A0/"/>
    
      <category term="单链表" scheme="http://leeyonghua.com/tags/%E5%8D%95%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>栈-回文判断</title>
    <link href="http://leeyonghua.com/2017/11/01/%E6%A0%88-%E5%9B%9E%E6%96%87%E5%88%A4%E6%96%AD/"/>
    <id>http://leeyonghua.com/2017/11/01/栈-回文判断/</id>
    <published>2017-10-31T16:00:00.000Z</published>
    <updated>2017-11-01T13:37:37.023Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Stack</span></span></div><div class="line"><span class="class">&#123;</span></div><div class="line">	<span class="keyword">int</span> top;</div><div class="line">	<span class="keyword">char</span> data[<span class="number">100</span>];</div><div class="line">&#125;;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">(Stack *s)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	s-&gt;top = <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">Push</span><span class="params">(Stack *s, <span class="keyword">char</span> x)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	s-&gt;data[s-&gt;top] = x;</div><div class="line">	s-&gt;top++;</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">Pop</span><span class="params">(Stack *s, <span class="keyword">char</span> *x)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	*x = s-&gt;data[s-&gt;top - <span class="number">1</span>];</div><div class="line">	s-&gt;top--;</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	<span class="keyword">char</span> data[<span class="number">100</span>];</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	Stack s;</div><div class="line">	<span class="keyword">char</span> x;</div><div class="line">	Init(&amp;s);</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; data;</div><div class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(data); i++)</div><div class="line">	&#123;</div><div class="line">		Push(&amp;s, data[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(data); i++)</div><div class="line">	&#123;</div><div class="line">		Pop(&amp;s, &amp;x);</div><div class="line">		<span class="keyword">if</span> (data[i] != x)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">cout</span> &lt;&lt; <span class="string">"no"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">			<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"yes"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	system(<span class="string">"pause"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;
    
    </summary>
    
      <category term="学习之路" scheme="http://leeyonghua.com/categories/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="数据结构" scheme="http://leeyonghua.com/categories/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="http://leeyonghua.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="栈" scheme="http://leeyonghua.com/tags/%E6%A0%88/"/>
    
      <category term="回文判断" scheme="http://leeyonghua.com/tags/%E5%9B%9E%E6%96%87%E5%88%A4%E6%96%AD/"/>
    
  </entry>
  
  <entry>
    <title>绪论</title>
    <link href="http://leeyonghua.com/2017/09/12/%E7%BB%AA%E8%AE%BA/"/>
    <id>http://leeyonghua.com/2017/09/12/绪论/</id>
    <published>2017-09-12T08:51:47.000Z</published>
    <updated>2017-09-12T10:38:10.666Z</updated>
    
    <content type="html"><![CDATA[<p>这个系列将作为我自己的一个读书笔记和课后总结</p>
<p>使用教材：<strong>数据结构</strong>（C语言版）      严蔚敏 吴伟明 </p>
<h1 id="What-is-Data-Structure"><a href="#What-is-Data-Structure" class="headerlink" title="What is Data Structure?"></a><strong>What is Data Structure?</strong></h1><p>简单来说，数据结构是一门研究非数值计算的程序设计问题中计算机的操作对象以及它们之间的关系和操作等的学科。</p>
<p>数据结构是数据及相互之间的联系</p>
<h1 id="程序设计的实质"><a href="#程序设计的实质" class="headerlink" title="程序设计的实质"></a><strong>程序设计的实质</strong></h1><p><strong>数据表示</strong>：将数据存储在计算机（内存）中</p>
<p><strong>数据处理</strong>：处理数据，设计方案（算法）</p>
<h1 id="基本概念和术语"><a href="#基本概念和术语" class="headerlink" title="基本概念和术语"></a><strong>基本概念和术语</strong></h1><p><strong>数据</strong>（data）是对客观事物的符号表示，在计算机学科中是指所有能输入到计算机中并被计算机程序处理的符号的总称。</p>
<p>在计算机领域中，data是所有能被计算机加工的对象</p>
<p><strong>数据元素</strong>（data element）是数据的基本单位，在计算机程序中通常作为一个整体进行考虑和处理。</p>
<p>有时，一个数据元素可由若干个<strong>数据项</strong>（data item）组成。</p>
<p>数据项是数据的不可分割的最小单位。</p>
<p><strong>数据对象</strong>（object）是性质相同的数据元素的集合，是数据的一个子集。</p>
<p><img src="http://obf3hxdza.bkt.clouddn.com/112121537961195.png" alt="image"></p>
<h1 id="4类基本结构"><a href="#4类基本结构" class="headerlink" title="4类基本结构"></a>4类基本结构</h1><p><strong>1. 集合</strong>：<br>结构中的数据元素之间除了“同属于一个集合”的关系外，无其他关系</p>
<p><strong>2. 线性结构</strong>：<br>结构中的数据元素之间存在一个对一个的关系</p>
<p><strong>3. 树形结构</strong>：<br>结构中的数据元素之间存在一个对多个的关系</p>
<p><strong>4. 图状结构或网状结构</strong>：<br>结构中的数据元素之间存在多个对多个的关系</p>
<hr>
<p><strong>数据结构的形式定义</strong>：<br>    数据结构是一个二元组</p>
<pre><code>Data_Structure = （D, S）
</code></pre><p>其中，D是数据结构的有限集，S是D上关系的有限集。</p>
<p>## </p>
<p><strong>数据结构在计算机中的表示（映像）称为数据的物理结构，又称存储结构</strong></p>
<p>在计算机中，我们可以用一个由若干个<strong>位</strong>（bit）组合起来形成的一个位串表示一个数据元素，通常称这个位串为<strong>元素</strong>（element）或<strong>结点</strong>（node）。</p>
<p>当数据元素由若干数据项组成时，位串中对应于各个数据项的<strong>子位串</strong>称为<strong>数据域</strong>（data field），元素或结点可看成是数据元素在计算机中的映像。</p>
<h1 id="数据元素的关系在计算机中的两种表示方法："><a href="#数据元素的关系在计算机中的两种表示方法：" class="headerlink" title="数据元素的关系在计算机中的两种表示方法："></a>数据元素的关系在计算机中的两种表示方法：</h1><p><strong>1. 顺序映像</strong></p>
<p><strong>2. 非顺序映像</strong></p>
<p>由此得到两种不同的存储结构：</p>
<ul>
<li>顺序存储结构</li>
<li>链式存储结构</li>
</ul>
<p>顺序映像的特点是借助元素在存储器中的<strong>相对位置</strong>来表示数据元素之间的逻辑关系。</p>
<p>非顺序映像的特点是借助指示元素存储地址的<strong>指针</strong>（pointer）表示数据元素之间的逻辑关系。</p>
<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><strong>数据类型</strong>是和数据结构密切相关的一个概念，它最早出现在高级程序语言中，用以刻画（程序）操作对象的特性。</p>
<p>数据类型是一个值的集合和定义在这个值集上的一组操作的总称。</p>
<h2 id="抽象数据类型（Abstract-Data-Type-简称ADT）"><a href="#抽象数据类型（Abstract-Data-Type-简称ADT）" class="headerlink" title="抽象数据类型（Abstract Data Type,简称ADT）"></a>抽象数据类型（Abstract Data Type,简称ADT）</h2><p>ADT是指一个数学模型以及定义在该模型上的一组操作。</p>
<p>抽象数据类型和数序类型实质上是一个概念。</p>
<h1 id="一个含抽象数据类型的软件模块通常包含定义、表示、和实现3个部分"><a href="#一个含抽象数据类型的软件模块通常包含定义、表示、和实现3个部分" class="headerlink" title="一个含抽象数据类型的软件模块通常包含定义、表示、和实现3个部分"></a>一个含抽象数据类型的软件模块通常包含定义、表示、和实现3个部分</h1><p>抽象数据类型的定义由一个值域和定义在该值域上的一组操作组成，按照其值的不同特性，可细分为下列三种类型：</p>
<p><strong>原子类型</strong>（atomic data type）属原子类型的变量的值是不可分解的。</p>
<p><strong>固定聚合类型</strong>（fixed-aggregate data type）属该类型的变量，其值由确定数目的成分按某种结构组成。</p>
<p><strong>可变聚合类型</strong>（variable-aggregate data type）和固定聚合类型相比较，构成可变聚合类型“值”的成分的数目不确定。</p>
<p>抽象数据类型可用三元组表示</p>
<pre><code>(D, S, P)
</code></pre><p>其中，D是数据对象，S是D上的关系集，P是对D的基本操作集。</p>
<pre><code>ADT 抽象数据类型名｛
    数据对象：&lt;数据对象的定义&gt;
    数据关系：&lt;数据关系的定义&gt;
    数据操作：&lt;数据操作的定义&gt;
｝ADT抽象数据类型名
</code></pre><p><strong>多行数据类型</strong>（polymorphic data type）是指其值的成分不确定的数据类型。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个系列将作为我自己的一个读书笔记和课后总结&lt;/p&gt;
&lt;p&gt;使用教材：&lt;strong&gt;数据结构&lt;/strong&gt;（C语言版）      严蔚敏 吴伟明 &lt;/p&gt;
&lt;h1 id=&quot;What-is-Data-Structure&quot;&gt;&lt;a href=&quot;#What-is-Data-S
    
    </summary>
    
      <category term="学习之路" scheme="http://leeyonghua.com/categories/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="数据结构" scheme="http://leeyonghua.com/categories/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="http://leeyonghua.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="第一章" scheme="http://leeyonghua.com/tags/%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
    
      <category term="绪论" scheme="http://leeyonghua.com/tags/%E7%BB%AA%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>新的开始</title>
    <link href="http://leeyonghua.com/2017/08/31/hello-world/"/>
    <id>http://leeyonghua.com/2017/08/31/hello-world/</id>
    <published>2017-08-31T10:01:31.435Z</published>
    <updated>2017-09-12T09:04:44.879Z</updated>
    
    <content type="html"><![CDATA[<p>磕磕碰碰，终于把博客建立起来了，既然如此，那就面向星辰大海吧！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;磕磕碰碰，终于把博客建立起来了，既然如此，那就面向星辰大海吧！&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
</feed>
